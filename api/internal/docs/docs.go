// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "BSD 3-Clause License",
            "url": "https://raw.githubusercontent.com/EgorTarasov/true-tech/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/consumers/filters": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search consumers"
                ],
                "summary": "получение списка всех фильтров для поиска по объектам",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Filter"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/consumers/info/unoms": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumers"
                ],
                "summary": "получение информации о потребителях по unoms",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "уникальные номера объектов",
                        "name": "unoms",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/consumers/q": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search consumers"
                ],
                "summary": "поиск по объектам consumers с учетом фильтров",
                "parameters": [
                    {
                        "description": "фильтры для поиска",
                        "name": "filters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.HeatingPointDTO"
                            }
                        }
                    }
                }
            }
        },
        "/data/predict": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "получение предсказание аварийных ситуаций и информации об объекте",
                "parameters": [
                    {
                        "description": "predictionRequest",
                        "name": "predictionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.predictionRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/geo/location/unom": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "получение гео данных по unom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "уникальный номер объекта",
                        "name": "unom",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/geo/location/unoms": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "location"
                ],
                "summary": "получение гео данных по unoms",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "уникальные номера объектов",
                        "name": "unoms",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/geo/moek": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geo"
                ],
                "summary": "третья тестовая ручка",
                "parameters": [
                    {
                        "type": "number",
                        "description": "longitude",
                        "name": "longitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "latitude",
                        "name": "latitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "radius",
                        "name": "radius",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MoekDTO"
                            }
                        }
                    }
                }
            }
        },
        "/geo/property": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geo"
                ],
                "summary": "вторая тестовая ручка",
                "parameters": [
                    {
                        "type": "number",
                        "description": "longitude",
                        "name": "longitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "latitude",
                        "name": "latitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "radius",
                        "name": "radius",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PropertyDTO"
                            }
                        }
                    }
                }
            }
        },
        "/geo/property/id/:object": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geo"
                ],
                "summary": "тестовая ручка на проверку postgis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PropertyDTO"
                        }
                    }
                }
            }
        },
        "/issue/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issue"
                ],
                "summary": "создание инцидента",
                "parameters": [
                    {
                        "description": "incidentCreateRequest",
                        "name": "incidentCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.incidentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/issue/heating-point/{unom}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issue"
                ],
                "summary": "получение информации об инцидетнах по уникальному номеру объекта",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unom",
                        "name": "unom",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Incident"
                            }
                        }
                    }
                }
            }
        },
        "/issue/id/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issue"
                ],
                "summary": "получение информации об инцидетне по его идентификатору",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Incident"
                        }
                    }
                }
            }
        },
        "/issue/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "issue"
                ],
                "summary": "получение информации об инцидетнах",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Incident"
                            }
                        }
                    }
                }
            }
        },
        "/reports/create": {
            "post": {
                "description": "Создание отчета",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Создание отчета",
                "parameters": [
                    {
                        "description": "reportCreate",
                        "name": "reportCreate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reports.CreateReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/reports/my": {
            "get": {
                "description": "Получение списка отчетов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Получение списка отчетов",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reports.Report"
                            }
                        }
                    }
                }
            }
        },
        "/reports/{id}": {
            "get": {
                "description": "Получение отчета",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Получение отчета",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reports.Report"
                        }
                    }
                }
            }
        },
        "/search/objects": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "поиск по объектам (потребителям) тепло энергии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "поисковой запрос",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.StatePropertySearchResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/source/q/:unom": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search consumers"
                ],
                "summary": "получение данных о ТП по уникальным номерам",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "уникальные номера объектов",
                        "name": "unoms",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Address"
                        }
                    }
                }
            }
        },
        "/users/file/list": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list uploads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "list uploads",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Upload"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errResponse"
                        }
                    }
                }
            }
        },
        "/users/file/status/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "check file processing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "check file processing",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Upload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "users with email + password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Auth with email creds",
                "parameters": [
                    {
                        "description": "user creds",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.emailCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.accessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get user data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get user data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/token.UserPayload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errResponse"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "creating email account with FirstName and LastName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "creating email account",
                "parameters": [
                    {
                        "description": "User Email",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.accessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errResponse"
                        }
                    }
                }
            }
        },
        "/users/upload": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "upload file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "upload file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.fileUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "constants.Role": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "User",
                "Admin",
                "Moderator"
            ]
        },
        "handler.RegisterData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.accessTokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "handler.emailCredentials": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.errResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.fileUploadResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.incidentCreateRequest": {
            "type": "object",
            "required": [
                "priority",
                "status",
                "title"
            ],
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handler.predictionRequest": {
            "type": "object",
            "required": [
                "admArea",
                "endDate",
                "startDate",
                "threshold"
            ],
            "properties": {
                "admArea": {
                    "type": "string"
                },
                "endDate": {
                    "description": "string in format dd-mm-yyyy",
                    "type": "string"
                },
                "startDate": {
                    "description": "string in format dd-mm-yyyy",
                    "type": "string"
                },
                "threshold": {
                    "type": "number"
                }
            }
        },
        "models.Address": {
            "type": "object",
            "required": [
                "municipalDistrict"
            ],
            "properties": {
                "address": {
                    "description": "Полный Адрес в реестре.",
                    "type": "string"
                },
                "border": {
                    "description": "Граница объекта на карте."
                },
                "center": {
                    "description": "Центр объекта на карте.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Point"
                        }
                    ]
                },
                "municipalDistrict": {
                    "description": "Район округ.",
                    "type": "string"
                },
                "unom": {
                    "description": "Уникальный номер объекта недвижимости.",
                    "type": "integer"
                }
            }
        },
        "models.DisconnectionDTO": {
            "type": "object",
            "properties": {
                "actualDisconnectionDate": {},
                "actualReconnectionDate": {},
                "disconnectionType": {
                    "type": "string"
                },
                "plannedDisconnectionDate": {},
                "plannedReconnectionDate": {},
                "reason": {
                    "type": "string"
                },
                "registrationDate": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "models.DispatchServices": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "centerAddress": {
                    "type": "string"
                },
                "consumer": {
                    "type": "string"
                },
                "consumerFullAddress": {
                    "type": "string"
                },
                "consumerGroup": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "dispatchNumber": {
                    "type": "string"
                },
                "externalID": {
                    "type": "integer"
                },
                "heatDispatcherNumber": {
                    "type": "string"
                },
                "unom": {
                    "type": "integer"
                },
                "События": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Event"
                    }
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "ended_at": {
                    "type": "string"
                },
                "external_closed_at": {
                    "type": "string"
                },
                "external_created_at": {
                    "type": "string"
                },
                "external_ended_at": {
                    "type": "string"
                },
                "src": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "unom": {
                    "type": "integer"
                }
            }
        },
        "models.Filter": {
            "type": "object",
            "properties": {
                "filterName": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Graph": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GraphDataPoint"
                    }
                }
            }
        },
        "models.GraphDataPoint": {
            "type": "object",
            "properties": {
                "temp": {
                    "type": "number"
                },
                "time": {
                    "description": "время (1 час, 3 часа и т.п.)",
                    "type": "integer"
                }
            }
        },
        "models.HeatingPoint": {
            "type": "object",
            "properties": {
                "balance_holder": {
                    "type": "string"
                },
                "commissioning_date": {},
                "consumer_full_address": {
                    "$ref": "#/definitions/models.Address"
                },
                "consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "heating_point_full_address": {
                    "$ref": "#/definitions/models.Address"
                },
                "heating_point_location_type": {
                    "type": "string"
                },
                "heating_point_number": {
                    "type": "string"
                },
                "heating_point_src": {
                    "type": "string"
                },
                "heating_point_type": {
                    "type": "string"
                },
                "mkd_consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MKDConsumer"
                    }
                },
                "municipal_district": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "state_consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StateConsumer"
                    }
                },
                "unom": {
                    "type": "integer"
                }
            }
        },
        "models.HeatingPointDTO": {
            "type": "object",
            "properties": {
                "balance_holder": {
                    "type": "string"
                },
                "commissioning_date": {},
                "consumer_full_address": {
                    "$ref": "#/definitions/models.Address"
                },
                "consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Address"
                    }
                },
                "heating_point_full_address": {
                    "$ref": "#/definitions/models.Address"
                },
                "heating_point_location_type": {
                    "type": "string"
                },
                "heating_point_number": {
                    "type": "string"
                },
                "heating_point_src": {
                    "type": "string"
                },
                "heating_point_type": {
                    "type": "string"
                },
                "mkd_consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MKDConsumer"
                    }
                },
                "municipal_district": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "state_consumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StateConsumer"
                    }
                },
                "unom": {
                    "type": "integer"
                }
            }
        },
        "models.Incident": {
            "type": "object",
            "properties": {
                "closedAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dispatchServices": {
                    "$ref": "#/definitions/models.DispatchServices"
                },
                "graph": {
                    "$ref": "#/definitions/models.Graph"
                },
                "heatingPoint": {
                    "$ref": "#/definitions/models.HeatingPoint"
                },
                "id": {
                    "type": "integer"
                },
                "measurements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Measurement"
                    }
                },
                "mkdConsumer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MKDConsumer"
                    }
                },
                "openedAt": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "relatedObjects": {
                    "$ref": "#/definitions/models.UnomResult"
                },
                "stateConsumers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StateConsumer"
                    }
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "unom": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.MKDConsumer": {
            "type": "object",
            "properties": {
                "PassengerElevator": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "apartments": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "deprecation": {
                    "type": "number"
                },
                "district": {
                    "type": "string"
                },
                "entrances": {
                    "type": "integer"
                },
                "externalID": {
                    "type": "integer"
                },
                "feature": {
                    "type": "integer"
                },
                "floors": {
                    "type": "integer"
                },
                "fullAddress": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "projectSeries": {},
                "roofCleaningSequence": {
                    "type": "integer"
                },
                "roofMaterials": {
                    "type": "integer"
                },
                "serviceElevator": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "totalArea": {
                    "type": "number"
                },
                "totalLivingArea": {
                    "type": "number"
                },
                "totalNonLivingArea": {},
                "typesOfHousingStock": {
                    "type": "integer"
                },
                "unom": {
                    "type": "integer"
                },
                "wallMaterial": {
                    "type": "integer"
                },
                "События": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Event"
                    }
                }
            }
        },
        "models.Measurement": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "consumer": {
                    "description": "Бюджет / МКД",
                    "type": "string"
                },
                "coolantInput": {
                    "type": "number"
                },
                "coolantOutput": {
                    "type": "number"
                },
                "coolantSuppliedDifferenceLeakage": {
                    "type": "number"
                },
                "datetime": {
                    "type": "string"
                },
                "energyConsumption": {
                    "type": "number"
                },
                "heatingPoint": {
                    "type": "string"
                },
                "measurementDate": {
                    "type": "string"
                },
                "measuringDeviceBrand": {
                    "type": "string"
                },
                "measuringDeviceHours": {
                    "type": "number"
                },
                "unom": {
                    "type": "integer"
                }
            }
        },
        "models.MoekDTO": {
            "type": "object",
            "properties": {
                "loadActual": {
                    "type": "number"
                },
                "loadAvg": {
                    "type": "number"
                },
                "loadHeating": {
                    "type": "number"
                },
                "loadVent": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                },
                "point": {},
                "polygon": {},
                "src": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Point": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.PropertyDTO": {
            "type": "object",
            "properties": {
                "disconnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DisconnectionDTO"
                    }
                },
                "globalID": {
                    "type": "integer"
                },
                "point": {},
                "polygon": {}
            }
        },
        "models.StateConsumer": {
            "type": "object",
            "properties": {
                "admDistrict": {
                    "type": "string"
                },
                "area": {},
                "floors": {},
                "material": {
                    "type": "string"
                },
                "municupalDistrict": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "propertyClass": {
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unom": {
                    "type": "integer"
                },
                "События": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Event"
                    }
                }
            }
        },
        "models.StatePropertySearchResult": {
            "type": "object",
            "required": [
                "municipalDistrict"
            ],
            "properties": {
                "address": {
                    "description": "Полный Адрес в реестре.",
                    "type": "string"
                },
                "area": {},
                "border": {
                    "description": "Граница объекта на карте."
                },
                "center": {
                    "description": "Центр объекта на карте.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Point"
                        }
                    ]
                },
                "class": {
                    "type": "string"
                },
                "feature": {
                    "type": "string"
                },
                "floors": {},
                "municipalDistrict": {
                    "description": "Район округ.",
                    "type": "string"
                },
                "purpose": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "unom": {
                    "description": "Уникальный номер объекта недвижимости.",
                    "type": "integer"
                }
            }
        },
        "models.UnomResult": {
            "type": "object",
            "properties": {
                "consumer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MKDConsumer"
                    }
                },
                "dispatchService": {
                    "$ref": "#/definitions/models.DispatchServices"
                },
                "heatingPoint": {
                    "$ref": "#/definitions/models.HeatingPoint"
                },
                "unom": {
                    "type": "integer"
                }
            }
        },
        "models.Upload": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "reports.CreateReport": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "reports.Report": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "s3Key": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/reports.ReportState"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "reports.ReportState": {
            "type": "string",
            "enum": [
                "in_progress",
                "ready"
            ],
            "x-enum-varnames": [
                "ReportStateInProgress",
                "ReportStateReady"
            ]
        },
        "token.UserPayload": {
            "type": "object",
            "properties": {
                "auth_type": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/constants.Role"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.lct.larek.tech",
	BasePath:         "/ //no-lint.",
	Schemes:          []string{},
	Title:            "lct api",
	Description:      "This is a sample swagger for Fiber",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
