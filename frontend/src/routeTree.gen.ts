/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MapImport } from './routes/_map'
import { Route as BaseImport } from './routes/_base'

// Create Virtual Routes

const MapIndexLazyImport = createFileRoute('/_map/')()
const BaseRegisterLazyImport = createFileRoute('/_base/register')()
const BaseProfileLazyImport = createFileRoute('/_base/profile')()
const BaseLoginLazyImport = createFileRoute('/_base/login')()

// Create/Update Routes

const MapRoute = MapImport.update({
  id: '/_map',
  getParentRoute: () => rootRoute,
} as any)

const BaseRoute = BaseImport.update({
  id: '/_base',
  getParentRoute: () => rootRoute,
} as any)

const MapIndexLazyRoute = MapIndexLazyImport.update({
  path: '/',
  getParentRoute: () => MapRoute,
} as any).lazy(() => import('./routes/_map/index.lazy').then((d) => d.Route))

const BaseRegisterLazyRoute = BaseRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => BaseRoute,
} as any).lazy(() =>
  import('./routes/_base/register.lazy').then((d) => d.Route),
)

const BaseProfileLazyRoute = BaseProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => BaseRoute,
} as any).lazy(() => import('./routes/_base/profile.lazy').then((d) => d.Route))

const BaseLoginLazyRoute = BaseLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => BaseRoute,
} as any).lazy(() => import('./routes/_base/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_base': {
      id: '/_base'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BaseImport
      parentRoute: typeof rootRoute
    }
    '/_map': {
      id: '/_map'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MapImport
      parentRoute: typeof rootRoute
    }
    '/_base/login': {
      id: '/_base/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof BaseLoginLazyImport
      parentRoute: typeof BaseImport
    }
    '/_base/profile': {
      id: '/_base/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof BaseProfileLazyImport
      parentRoute: typeof BaseImport
    }
    '/_base/register': {
      id: '/_base/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof BaseRegisterLazyImport
      parentRoute: typeof BaseImport
    }
    '/_map/': {
      id: '/_map/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MapIndexLazyImport
      parentRoute: typeof MapImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  BaseRoute: BaseRoute.addChildren({
    BaseLoginLazyRoute,
    BaseProfileLazyRoute,
    BaseRegisterLazyRoute,
  }),
  MapRoute: MapRoute.addChildren({ MapIndexLazyRoute }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_base",
        "/_map"
      ]
    },
    "/_base": {
      "filePath": "_base.tsx",
      "children": [
        "/_base/login",
        "/_base/profile",
        "/_base/register"
      ]
    },
    "/_map": {
      "filePath": "_map.tsx",
      "children": [
        "/_map/"
      ]
    },
    "/_base/login": {
      "filePath": "_base/login.lazy.tsx",
      "parent": "/_base"
    },
    "/_base/profile": {
      "filePath": "_base/profile.lazy.tsx",
      "parent": "/_base"
    },
    "/_base/register": {
      "filePath": "_base/register.lazy.tsx",
      "parent": "/_base"
    },
    "/_map/": {
      "filePath": "_map/index.lazy.tsx",
      "parent": "/_map"
    }
  }
}
ROUTE_MANIFEST_END */
