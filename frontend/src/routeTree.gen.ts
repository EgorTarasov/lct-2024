/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MapImport } from './routes/_map'
import { Route as BaseImport } from './routes/_base'
import { Route as MapWithfiltersImport } from './routes/_map/_with_filters'

// Create Virtual Routes

const BaseRegisterLazyImport = createFileRoute('/_base/register')()
const BaseLoginLazyImport = createFileRoute('/_base/login')()
const MapWithfiltersIndexLazyImport = createFileRoute('/_map/_with_filters/')()

// Create/Update Routes

const MapRoute = MapImport.update({
  id: '/_map',
  getParentRoute: () => rootRoute,
} as any)

const BaseRoute = BaseImport.update({
  id: '/_base',
  getParentRoute: () => rootRoute,
} as any)

const BaseRegisterLazyRoute = BaseRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => BaseRoute,
} as any).lazy(() =>
  import('./routes/_base/register.lazy').then((d) => d.Route),
)

const BaseLoginLazyRoute = BaseLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => BaseRoute,
} as any).lazy(() => import('./routes/_base/login.lazy').then((d) => d.Route))

const MapWithfiltersRoute = MapWithfiltersImport.update({
  id: '/_with_filters',
  getParentRoute: () => MapRoute,
} as any)

const MapWithfiltersIndexLazyRoute = MapWithfiltersIndexLazyImport.update({
  path: '/',
  getParentRoute: () => MapWithfiltersRoute,
} as any).lazy(() =>
  import('./routes/_map/_with_filters/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_base': {
      preLoaderRoute: typeof BaseImport
      parentRoute: typeof rootRoute
    }
    '/_map': {
      preLoaderRoute: typeof MapImport
      parentRoute: typeof rootRoute
    }
    '/_map/_with_filters': {
      preLoaderRoute: typeof MapWithfiltersImport
      parentRoute: typeof MapImport
    }
    '/_base/login': {
      preLoaderRoute: typeof BaseLoginLazyImport
      parentRoute: typeof BaseImport
    }
    '/_base/register': {
      preLoaderRoute: typeof BaseRegisterLazyImport
      parentRoute: typeof BaseImport
    }
    '/_map/_with_filters/': {
      preLoaderRoute: typeof MapWithfiltersIndexLazyImport
      parentRoute: typeof MapWithfiltersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  BaseRoute.addChildren([BaseLoginLazyRoute, BaseRegisterLazyRoute]),
  MapRoute.addChildren([
    MapWithfiltersRoute.addChildren([MapWithfiltersIndexLazyRoute]),
  ]),
])

/* prettier-ignore-end */
